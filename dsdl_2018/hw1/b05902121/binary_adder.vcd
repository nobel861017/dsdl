$date
	Mon Apr 30 16:54:14 2018
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module binary_adder_tb $end
$var wire 6 ! sum [5:0] $end
$var reg 6 " a [5:0] $end
$var reg 6 # b [5:0] $end
$scope module adder_0 $end
$var wire 6 $ a [5:0] $end
$var wire 6 % b [5:0] $end
$var wire 6 & sum [5:0] $end
$var wire 6 ' c [5:0] $end
$scope begin genblk1[0] $end
$scope begin genblk2 $end
$scope module full_adder0 $end
$var wire 1 ( a $end
$var wire 1 ) b $end
$var wire 1 * cin $end
$var wire 1 + cout $end
$var wire 1 , sum $end
$var wire 1 - tmp1 $end
$var wire 1 . tmp2 $end
$var wire 1 / tmp_sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope begin genblk3 $end
$scope module full_adder1 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 2 cin $end
$var wire 1 3 cout $end
$var wire 1 4 sum $end
$var wire 1 5 tmp1 $end
$var wire 1 6 tmp2 $end
$var wire 1 7 tmp_sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope begin genblk3 $end
$scope module full_adder1 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 : cin $end
$var wire 1 ; cout $end
$var wire 1 < sum $end
$var wire 1 = tmp1 $end
$var wire 1 > tmp2 $end
$var wire 1 ? tmp_sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope begin genblk3 $end
$scope module full_adder1 $end
$var wire 1 @ a $end
$var wire 1 A b $end
$var wire 1 B cin $end
$var wire 1 C cout $end
$var wire 1 D sum $end
$var wire 1 E tmp1 $end
$var wire 1 F tmp2 $end
$var wire 1 G tmp_sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope begin genblk3 $end
$scope module full_adder1 $end
$var wire 1 H a $end
$var wire 1 I b $end
$var wire 1 J cin $end
$var wire 1 K cout $end
$var wire 1 L sum $end
$var wire 1 M tmp1 $end
$var wire 1 N tmp2 $end
$var wire 1 O tmp_sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope begin genblk3 $end
$scope module full_adder1 $end
$var wire 1 P a $end
$var wire 1 Q b $end
$var wire 1 R cin $end
$var wire 1 S cout $end
$var wire 1 T sum $end
$var wire 1 U tmp1 $end
$var wire 1 V tmp2 $end
$var wire 1 W tmp_sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
1D
0C
1B
0A
0@
1?
1>
0=
0<
1;
1:
09
18
17
16
05
04
13
12
11
00
0/
0.
1-
0,
1+
0*
1)
1(
b111 '
b1000 &
b11 %
b101 $
b11 #
b101 "
b1000 !
$end
#1000
b1100 !
b1100 &
1<
0>
0?
1=
19
b111 #
b111 %
#2000
0<
0:
03
0L
14
06
0J
02
0B
0C
1,
0+
b0 '
0;
b1011 !
b1011 &
1D
0F
1/
0-
0=
1G
0)
09
08
1@
b10 #
b10 %
b1001 "
b1001 $
#3000
1T
b111011 !
b111011 &
1L
1W
1O
1Q
1H
b100010 #
b100010 %
b11001 "
b11001 $
#4000
